ABORT_ALL
/**
* Aborts all running and queued scripts, only this script will continue
* 
* @example {@code ABORT_ALL}
*/
BANK_WIELD
/**
* Wields items from your bank inventory
* 
* @param    item    required
*                   ItemName1/ItemID1,ItemName2/ItemID2, ..., ItemNameN/ItemIDN
* 
* @example {@code BANK_WIELD 20997,11864}
* @example {@code BANK_WIELD armadyl_godsword}
* @example {@code BANK_WIELD *ancestral*}
*/
CONSUME
/**
* Clicks on first found item
* 
* @param    item     required
*                    ItemName1/ItemID1,ItemName2/ItemID2, ..., ItemNameN/ItemIDN
* @param    id       optional
*                    Identifier / menu option to click
* 
* @example {@code CONSUME shark,*brew*,*karam*}
* @example {@code CONSUME 385}
* @example {@code CONSUME 229 7}
*/
CONSUME_ALL
/**
* Iterates foreach on all items found
* 
* @param    item     required
*                    ItemName1/ItemID1,ItemName2/ItemID2, ..., ItemNameN/ItemIDN
* @param    id       optional
*                    Identifier / menu option to click
* 
* @example {@code CONSUME_ALL grimy_irit_leaf}
* @example {@code CONSUME_ALL oak_logs 7}
* @example {@code CONSUME_ALL *leaping* 7}
*/
CUSTOM
/**
* Sends custom menuaction
* 
* IMPORTANT! Validity of the menuaction data IS NOT
* verified. Using this command is advanced method.
* 
* @param    menuActionID    required
* @param    identifier      required
* @param    itemID          required
* @param    param0          required
* @param    param1          required
* 
* @example {@code CUSTOM 57 1 -1 -1 10485787}
*/
EMOTE
/**
* Performs emote
* 
* @param    emote    required
*                    EmoteName
* 
* @example {@code EMOTE DANCE}
*/
HOP_RANDOM
/**
* Hops to random world
* 
* @param    subscriptionType    required
*                               0 = Free to play worlds only
*                               1 = Pay to play worlds only
* 
* @example {@code PICKUP}
* @example {@code PICKUP 1}
*/
ITEM_NPC
/**
* Uses item on your NPC target
* 
* @param    item     required
*                    ItemName1/ItemID1,ItemName2/ItemID2, ..., ItemNameN/ItemIDN
* 
* @example {@code ITEM_NPC iron_bar}
* @example {@code ITEM_NPC 536}
*/
ITEM_OBJECT
/**
* Uses item on first found object
* 
* @param    item      required
*                     ItemName1/ItemID1,ItemName2/ItemID2, ..., ItemNameN/ItemIDN
* @param    object    required
*                     ObjectName1/ObjectID1,ObjectName2/ObjectID2, ..., ObjectNameN/ObjectIDN
* 
* @example {@code ITEM_OBJECT *bones* chaos_altar}
* @example {@code ITEM_OBJECT steel_bar bank_booth}
* @example {@code ITEM_OBJECT 22124 61}
*/
ITEM_USE
/**
* Combines inventory item one on inventory item two
* 
* @param    item1    required
*                    ItemName1/ItemID1,ItemName2/ItemID2, ..., ItemNameN/ItemIDN
* @param    item2    required
*                    ItemName1/ItemID1,ItemName2/ItemID2, ..., ItemNameN/ItemIDN
* 
* @example {@code ITEM_USE feather *dart_tip}
* @example {@code ITEM_USE 13421 6032}
*/
ITEM_USE_ALL
/**
* Combines inventory item one on every match of item two
* 
* @param    item1    required
*                    ItemName1/ItemID1,ItemName2/ItemID2, ..., ItemNameN/ItemIDN
* @param    item2    required
*                    ItemName1/ItemID1,ItemName2/ItemID2, ..., ItemNameN/ItemIDN
* 
* @example {@code ITEM_USE_ALL chisel *essence*}
* @example {@code ITEM_USE_ALL 946 13339}
*/
MOVE
/**
* Moves relatively to your own player's current location
* 
* @param    x           required
*                       Number of tiles in x-axis, can be negative
* @param    y           required
*                       Number of tiles in y-axis, can be negative
* @param    accuracy    optional
*                       Determines how accurately x/y point should be clicked
*                       Unit it tiles, higher number means less accurate
* 
* @example {@code MOVE 5 1}
* @example {@code MOVE -5 -5 2}
*/
NPC
/**
* Clicks on first NPC found
* 
* @param    npc           required
*                         NpcID/NpcName
* @param    menuaction    optional
*                         MenuAction ID
*                         @see <a href="https://github.com/runelite/runelite/blob/master/runelite-api/src/main/java/net/runelite/api/MenuAction.java">MenuAction</a>
*                         Leaving menuaction out will default to NPC_SECOND_OPTION (10)
* 
* @example {@code NPC goblin}
* @example {@code NPC perdu 11}
* @example {@code NPC 7730 9}
*/
OBJECT
/**
* Clicks on first object found
* 
* @param    object        required
*                         ObjectName1/ObjectID1,ObjectName2/ObjectID2, ..., ObjectNameN/ObjectIDN
* @param    menuaction    optional
*                         MenuAction ID
*                         @see <a href="https://github.com/runelite/runelite/blob/master/runelite-api/src/main/java/net/runelite/api/MenuAction.java">MenuAction</a>
*                         Leaving menuaction out will default to GAME_OBJECT_FIRST_OPTION (3)
* 
* @example {@code OBJECT bank_chest}
* @example {@code OBJECT oak_tree}
* @example {@code OBJECT bank_booth 4}
*/
PICKUP
/**
* Picks item up, only supported after item spawn trigger
* 
* @param    telegrab    optional
*                       1 = telegrab instead of walking
* 
* @example {@code PICKUP}
* @example {@code PICKUP 1}
*/
PRAYER_
/**
* Clicks on prayer from prayer book
* 
* @param    clickMode    optional
*                        0 = Only turn off
*                        1 = Only turn off
*                        Leaving clickMode out will always click
* 
* @example {@code PROTECT_ITEM}
* @example {@code PIETY 1}
* @example {@code PROTECT_FROM_MAGIC 0}
*/
QUICK_PRAYER
/**
* Clicks on quick prayer orb
* 
* @param    clickMode    optional
*                        0 = Only turn off
*                        1 = Only turn off
*                        Leaving clickMode out will always click
* 
* @example {@code QUICK_PRAYER 1}
* @example {@code QUICK_PRAYER}
*/
RUNSCRIPT
/**
* Runs script content by script name
* 
* @param    scriptName    required
*                         Existing script name, case sensitive exact match
*                         Script that is being triggered does not need to be enabled
* 
* @example {@code RUNSCRIPT pureMageGear}
* @example {@code RUNSCRIPT mainRangeGear}
*/
SCENE_WALK
/**
* Moves inside your loaded scene
* 
* @param    x           required
*                       World coordinate X
* @param    y           required
*                       World coordinate Y
* @param    accuracy    optional
*                       Determines how accurately this world point should be clicked
*                       Unit it tiles, higher number means less accurate
* 
* @example {@code SCENE_WALK 3212 3429}
* @example {@code SCENE_WALK 3216 3416 3}
*/
SLEEP
/**
* Sleep for exact or randomized amount of milliseconds
* 
* @param    minMS    required
*                    Minimum milliseconds to sleep for
* @param    maxMS    optional
*                    Maximum milliseconds to sleep for
*                    Leaving maxMS out will sleep exactly for minMS instead of random time between minMS and maxMS
* 
* @example {@code SLEEP 2000}
* @example {@code SLEEP 50 100}
*/
SPECIAL
/**
* Activates special attack using special attack bar
* 
* If {@param minEnergy} is used, but the criteria is not met
* script execution will end after this command is processed
* 
* @param    minEnergy    optional
*                        Minimum special attack energy required
* 
* @example {@code SPECIAL}
* @example {@code SPECIAL 25}
*/
SPELL_
/**
* Casts spell on your current target, item or object by name or enables left click casting
* 
* @param    target    optional
*                     ItemName/ItemID/ObjectName/ObjectID or
*                     1 = Enable left click casting
* 
* @example {@code ICE_BARRAGE}
* @example {@code FIRE_SURGE 1}
* @example {@code CHARGE_AIR_ORB 2152}
*/
TARGET
/**
* Clicks on your current target
* 
* @param    menuaction    optional
*                         MenuAction ID
*                         @see <a href="https://github.com/runelite/runelite/blob/master/runelite-api/src/main/java/net/runelite/api/MenuAction.java">MenuAction</a>
*                         Leaving menuaction out will default to NPC_SECOND_OPTION (10) for npcs
*                         Leaving menuaction out will default to PLAYER_SECOND_OPTION (45) for players
* 
* @example {@code TARGET}
* @example {@code TARGET 11}
*/
TARGET_SET
/**
* Sets this spawn as your target
* 
* IMPORTANT! This command needs to be used with spawn trigger
* 
* @example {@code TARGET_SET}
*/
TARGET_UNSET
/**
* Unsets your current target
* 
* @example {@code TARGET_UNSET}
*/
UNEQUIP
/**
* Unequips gear from equipment tab
* 
* @param    item    required
*                   ItemName1/ItemID1,ItemName2/ItemID2, ..., ItemNameN/ItemIDN
* 
* @example {@code UNEQUIP 20997,11864}
* @example {@code UNEQUIP armadyl_godsword}
* @example {@code UNEQUIP *ancestral*}
*/
WALK_TARGET
/**
* Walks under your target's current location coordinates
* 
* @example {@code WALK_TARGET}
*/
WIELD
/**
* Wields items from your inventory
* 
* @param    item    required
*                   ItemName1/ItemID1,ItemName2/ItemID2, ..., ItemNameN/ItemIDN
* 
* @example {@code WIELD 20997,11864}
* @example {@code WIELD armadyl_godsword}
* @example {@code WIELD *ancestral*}
*/
WITHDRAW
/**
* Withdraws items from your bank
* 
* @param    item        required
*                       ItemName1/ItemID1,ItemName2/ItemID2, ..., ItemNameN/ItemIDN
* @param    quantity    optional
*                       Leaving quantity out will withdraw all
* 
* @example {@code WITHDRAW shark 5}
* @example {@code WITHDRAW coins}
*/
ANIMATION_ANY
/**
* Triggers when animation is displayed on any visible actor
* 
* @param    animation    required
*                        AnimationID1,AnimationID2, ..., AnimationIDN
* 
* @example {@code ANIMATION_ANY 644}
*/
ANIMATION_SELF
/**
* Triggers when animation is displayed on yourself
* 
* @param    animation    required
*                        AnimationID1,AnimationID2, ..., AnimationIDN
* 
* @example {@code ANIMATION_SELF 848}
*/
ANIMATION_TARGET
/**
* Triggers when animation is displayed on your target
* 
* @param    animation    required
*                        AnimationID1,AnimationID2, ..., AnimationIDN
* 
* @example {@code ANIMATION_TARGET 104}
*/
DEATH
/**
* Triggers when you die
* 
* @example {@code DEATH}
*/
GRAPHIC_SELF
/**
* Triggers when graphic is rendered on yourself
* 
* @param    graphic    required
*                      graphicID1,graphicID2, ..., graphicIDN
* 
* @example {@code GRAPHIC_SELF 345}
*/
GRAPHIC_SPAWN
/**
* Triggers when graphic object spawns
* 
* @param    graphicsObject    required
*                             GraphicsObjectName1/GraphicsObjectID1,GraphicsObjectName2/GraphicsObjectID2, ..., GraphicsObjectNameN/GraphicsObjectIDN
* 
* @example {@code GRAPHIC_SPAWN 1227}
*/
GRAPHIC_TARGET
/**
* Triggers when graphic is rendered on you target
* 
* @param    graphic    required
*                      graphicID1,graphicID2, ..., graphicIDN
* 
* @example {@code GRAPHIC_TARGET 85}
*/
HITSPLAT
/**
* Triggers when hitsplat is applied on your target
* 
* @param    value    optional
*                    Minimum hitsplat value
* 
* @example {@code HITSPLAT 20}
*/
HITSPLAT_SELF
/**
* Triggers when hitsplat is applied on yourself
* 
* @param    value    optional
*                    Minimum hitsplat value
* 
* @example {@code HITSPLAT_SELF 65}
*/
IDLE
/**
* Triggers when player returns to idle
* 
* @param    minMs    optional
*                    Minimum milliseconds to stay in idle before trigger is valid
* @param    maxMs    optional
*                    Maximum milliseconds to stay in idle before trigger is valid
*                    Leaving maxMS out will idle exactly for minMS instead of random time between minMS and maxMS
* 
* @example {@code IDLE}
* @example {@code IDLE 1500}
* @example {@code IDLE 5000 9000}
*/
INTERACTION_END
/**
* Triggers when interaction ends
* 
* @example {@code INTERACTION_END}
*/
INVENTORY_EMPTY
/**
* Triggers when player inventory is empty
* 
* @example {@code INVENTORY_EMPTY}
*/
INVENTORY_FULL
/**
* Triggers when player inventory is full
* 
* @example {@code INVENTORY_FULL}
*/
ITEM_SPAWN
/**
* Triggers when item spawns
* 
* @param    item    required
*                   ItemName1/ItemID1,ItemName2/ItemID2, ..., ItemNameN/ItemIDN
* 
* @example {@code ITEM_SPAWN 12819}
*/
MESSAGE
/**
* Triggers when you receive message matching message by type and content
* 
* @param    type       required
*                      Message type ID, usually ENGINE (4)
*                      @see <a href="https://github.com/runelite/runelite/blob/master/runelite-api/src/main/java/net/runelite/api/ChatMessageType.java">ChatMessageType</a>
* @param    message    required
*                      Message to match for this trigger
* 
* @example {@code MESSAGE 4 nothing_interesting_happens.}
*/
MOVING
/**
* Triggers when player movement starts
* 
* @example {@code MOVING}
*/
NOT_MOVING
/**
* Triggers when player movement stop
* 
* @example {@code NOT_MOVING}
*/
NPC_DESPAWN
/**
* Triggers when NPC despawns
* 
* @param    npc    required
*                  NpcName1/NpcID1,NpcName2/NpcID2, ..., NpcNameN/NpcIDN
* 
* @example {@code NPC_DESPAWN cerberus}
* @example {@code NPC_DESPAWN 2790,2792}
*/
NPC_SPAWN
/**
* Triggers when NPC spawns
* 
* @param    npc    required
*                  NpcName1/NpcID1,NpcName2/NpcID2, ..., NpcNameN/NpcIDN
* 
* @example {@code NPC_SPAWN cerberus}
* @example {@code NPC_SPAWN 2790,2792}
*/
OBJECT_SPAWN
/**
* Triggers when object spawns
* 
* @param    object    required
*                     ObjectName1/ObjectID1,ObjectName2/ObjectID2, ..., ObjectNameN/ObjectIDN
* 
* @example {@code OBJECT_SPAWN 9036,9033}
* @example {@code OBJECT_SPAWN bank_booth}
*/
OVERHEAD
/**
* Triggers when target overhead changes
* 
* @param    overhead    required
*                       OverheadName1,OverheadName2, ..., OverheadNameN
* 
* @example {@code OVERHEAD SOUL_SPLIT}
* @example {@code OVERHEAD MELEE}
*/
PATH_ENDING
/**
* Triggers when your current action path is about to end
* 
* @example {@code PATH_ENDING}
*/
PLAYER_DESPAWN
/**
* Triggers when player despawns
* 
* @param    player    required
*                     PlayerName
* 
* @example {@code PLAYER_DESPAWN *}
* @example {@code PLAYER_DESPAWN myMule123}
*/
PLAYER_SPAWN
/**
* Triggers when player spawns
* 
* @param    player    required
*                     PlayerName
* 
* @example {@code PLAYER_SPAWN *}
* @example {@code PLAYER_SPAWN myMule123}
*/
PROJECTILE
/**
* Triggers when projectile is spawned
* 
* @param    projectile    required
*                         ProjectileID1,ProjectileID2, ..., ProjectileIDN
* 
* @example {@code PROJECTILE 2948}
*/
SOUND_EFFECT
/**
* Triggers when sound effect is played
* 
* IMPORTANT! You will need to have effect sounds at
* minimum of 1% volume to get sound triggers
* 
* @param    sound    required
*                    soundID1,soundID2, ..., soundIDN
* 
* @example {@code SOUND_EFFECT 2885}
*/
STAT
/**
* Triggers when skill is dropped below level target
* 
* @param    skillname    required
*                        Fully qualifier skill name as seen in-game
* @param    maxLevel     required
*                        Maximum level to consider valid for this trigger
* @param    minLevel     optional
*                        Minimum level to consider valid for this trigger
* 
* @example {@code STAT ATTACK 95}
* @example {@code STAT HITPOINTS 90 60}
* @example {@code STAT HITPOINTS 60 40}
*/
TARGET_GEAR_CHANGED
/**
* Triggers when your player target gear changes
* 
* @param    item    required
*                   ItemName1/ItemID1,ItemName2/ItemID2, ..., ItemNameN/ItemIDN
* 
* @example {@code TARGET_GEAR_CHANGED 20425,20426}
*/
TICK
/**
* Triggers when game tick happens
* 
* @example {@code TICK}
*/
VARBIT
/**
* Triggers when varbit changes below value
* 
* @param    varbit    required
*                     varbit ID
* @param    value     required
*                     Minimum value to consider valid for this trigger
* 
* @example {@code VARBIT 3956 200}
*/
VARPLAYER
/**
* Triggers when varplayer changes below value
* 
* @param    varplayer    required
*                        varplayer ID
* @param    value        required
*                        Minimum value to consider valid for this trigger
* 
* @example {@code VARPLAYER 102 1}
*/
WIDGET_SPAWN
/**
* Triggers when widget spawns
* 
* @param    widget    required
*                     WidgetID1,WidgetID2, ..., WidgetIDN
* 
* @example {@code WIDGET_SPAWN 429}
* @example {@code WIDGET_SPAWN 12}
*/
XP_DROP
/**
* Triggers when xp drop higher than value is received
* 
* @param    skillname    optional
*                        Fully qualifier skill name as seen in-game
* @param    minValue     required
*                        Minimum value to consider valid for this trigger
* 
* @example {@code XP_DROP MAGIC 100}
* @example {@code XP_DROP 1}
* @example {@code XP_DROP STRENGTH 200}
*/
REPEAT_ALL
/**
* Repeats whole script from start
* 
* IMPORTANT! This command will repeat the script infinitely,
* you will need to abort it to stop execution
* 
* @example {@code REPEAT_ALL}
*/
